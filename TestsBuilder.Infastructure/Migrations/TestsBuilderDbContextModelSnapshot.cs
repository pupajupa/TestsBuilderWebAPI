// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestsBuilder.Infastructure.Persistence;

#nullable disable

namespace TestsBuilder.Infastructure.Migrations
{
    [DbContext(typeof(TestsBuilderDbContext))]
    partial class TestsBuilderDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TestsBuilder.Domain.Test.Test", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<Guid>("HostId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Tests", (string)null);
                });

            modelBuilder.Entity("TestsBuilder.Domain.Test.Test", b =>
                {
                    b.OwnsMany("TestsBuilder.Domain.Test.Entities.Example", "Examples", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("ExampleId");

                            b1.Property<Guid>("TestId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("BaseAnswers")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("BaseAnswers");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.Property<string>("Text")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.HasKey("Id", "TestId");

                            b1.HasIndex("TestId");

                            b1.ToTable("Examples", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("TestId");

                            b1.OwnsMany("TestsBuilder.Domain.Test.Entities.ExampleVariant", "Variants", b2 =>
                                {
                                    b2.Property<Guid>("Id")
                                        .HasColumnType("uniqueidentifier")
                                        .HasColumnName("ExampleVariantId");

                                    b2.Property<Guid>("ExampleId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<Guid>("TestId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("Answers")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)")
                                        .HasColumnName("Answers");

                                    b2.Property<string>("Expression")
                                        .IsRequired()
                                        .HasMaxLength(100)
                                        .HasColumnType("nvarchar(100)");

                                    b2.Property<string>("Number")
                                        .IsRequired()
                                        .HasMaxLength(3)
                                        .HasColumnType("nvarchar(3)");

                                    b2.HasKey("Id", "ExampleId", "TestId");

                                    b2.HasIndex("ExampleId", "TestId");

                                    b2.ToTable("ExampleVariants", (string)null);

                                    b2.WithOwner()
                                        .HasForeignKey("ExampleId", "TestId");
                                });

                            b1.Navigation("Variants");
                        });

                    b.Navigation("Examples");
                });
#pragma warning restore 612, 618
        }
    }
}
